{"version":3,"sources":["components/ContactList/ContactListElem/ContactListElem.module.css","components/Logo/Logo.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactListElem/ContactListElem.js","components/ContactList/ContactList.js","Filter.js","components/Logo/Logo.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","addContact","reset","this","onSubmit","className","styles","contactForm","htmlFor","type","placeholder","onChange","disabled","length","Component","ContactListElem","onDelete","contactDescr","onClick","contactBtn","itemMove","enter","enterActive","exit","exitActive","ContactList","contacts","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","style","display","Filter","logoStyles","appear","appearActive","Logo","in","unmountOnExit","App","filter","newName","toLowerCase","includes","trim","toast","configure","error","position","POSITION","TOP_CENTER","autoClose","delay","transition","Zoom","removeContact","updatedContacts","filterContactsByName","persistedContacts","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e028454.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactListElem_contact__1K8yw\",\"contactDescr\":\"ContactListElem_contactDescr__WmJ-s\",\"contactBtn\":\"ContactListElem_contactBtn__1kKzo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__2WlgU\",\"appear\":\"Logo_appear__1m-m2\",\"appearActive\":\"Logo_appearActive__KvGXK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3d6yq\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    this.props.addContact(contact);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.contactForm}>\r\n        <label htmlFor=\"nameInput\">\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"enter name...\"\r\n            onChange={this.handleChange}\r\n            id=\"nameInput\"\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"numberInput\">\r\n          Number:\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"enter number...\"\r\n            onChange={this.handleChange}\r\n            id=\"numberInput\"\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={!name.length || !number.length}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactListElem.module.css\";\r\n\r\nconst ContactListElem = ({ name, number, onDelete }) => {\r\n  return (\r\n    <li className={styles.contact}>\r\n      <p className={styles.contactDescr}>\r\n        {name}: {number}\r\n      </p>\r\n      <button type=\"button\" onClick={onDelete} className={styles.contactBtn}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListElem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListElem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport ContactListElem from \"./ContactListElem/ContactListElem\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst itemMove = {\r\n  enter: styles.enter,\r\n  enterActive: styles.enterActive,\r\n  exit: styles.exit,\r\n  exitActive: styles.exitActive,\r\n};\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\">\r\n      {contacts.length ? (\r\n        contacts.map(({ id, name, number }) => (\r\n          <CSSTransition key={id} timeout={250} classNames={itemMove}>\r\n            <ContactListElem\r\n              name={name}\r\n              number={number}\r\n              onDelete={() => onDelete(id)}\r\n            />\r\n          </CSSTransition>\r\n        ))\r\n      ) : (\r\n        <p>no contact with such name in your phone </p>\r\n      )}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    PropTypes.array,\r\n  ]),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst style = {\r\n  display: \"block\",\r\n};\r\n\r\nconst Filter = ({ onChange }) => {\r\n  return (\r\n    <label htmlFor=\"filterInput\">\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        onChange={onChange}\r\n        name=\"filter\"\r\n        style={style}\r\n        id=\"filterInput\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./Logo.module.css\";\r\n\r\nconst logoStyles = {\r\n  appear: styles.appear,\r\n  appearActive: styles.appearActive,\r\n};\r\nexport const Logo = () => {\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={500}\r\n      classNames={logoStyles}\r\n      unmountOnExit\r\n    >\r\n      <h1>Phonebook</h1>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\n/* <span role=\"img\" aria-label=\"TELEPHONE\">\r\n☎️\r\n</span> */\r\n","import React, { Component } from \"react\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./Filter\";\nimport { Logo } from \"./components/Logo/Logo\";\n\nimport { toast, Zoom } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (contact) => {\n    const newName = contact.name;\n    const names = this.state.contacts.map((contact) =>\n      contact.name.toLowerCase()\n    );\n    if (names.includes(newName.toLowerCase().trim())) {\n      toast.configure();\n      toast.error(`${newName} is already in contact list`, {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 8000,\n        delay: 200,\n        transition: Zoom,\n      });\n    } else {\n      this.setState((state) => ({\n        contacts: [...state.contacts, contact],\n      }));\n    }\n  };\n\n  removeContact = (id) => {\n    const { contacts } = this.state;\n    const updatedContacts = contacts.filter((contact) => contact.id !== id);\n    this.setState({\n      contacts: [...updatedContacts],\n    });\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  filterContactsByName = () => {\n    const { contacts, filter } = this.state;\n    if (contacts.length) {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  };\n\n  render() {\n    const { contacts } = this.state;\n    return (\n      <div className=\"Wrapper\">\n        <Logo />\n        <ContactForm addContact={this.addContact} />\n        <h2 className=\"Title\">Contacts</h2>\n        {contacts.length > 1 && <Filter onChange={this.handleChange} />}\n        {contacts.length ? (\n          <ContactList\n            contacts={this.filterContactsByName()}\n            onDelete={this.removeContact}\n          />\n        ) : (\n          <p>No contacts in your list!</p>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactList_enter__5mR21\",\"enterActive\":\"ContactList_enterActive__1kgjc\",\"exit\":\"ContactList_exit__2ZqsW\",\"exitActive\":\"ContactList_exitActive__1BUEK\"};"],"sourceRoot":""}